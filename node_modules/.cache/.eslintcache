[{"/Users/emaad/Desktop/MemeGenerator/src/index.js":"1","/Users/emaad/Desktop/MemeGenerator/src/App.js":"2","/Users/emaad/Desktop/MemeGenerator/src/components/Header.js":"3","/Users/emaad/Desktop/MemeGenerator/src/components/Meme.js":"4"},{"size":254,"mtime":1710359502664,"results":"5","hashOfConfig":"6"},{"size":427,"mtime":1708751572868,"results":"7","hashOfConfig":"6"},{"size":457,"mtime":1708752913817,"results":"8","hashOfConfig":"6"},{"size":2137,"mtime":1708751572871,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"veh9y9",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/emaad/Desktop/MemeGenerator/src/index.js",[],[],"/Users/emaad/Desktop/MemeGenerator/src/App.js",[],[],"/Users/emaad/Desktop/MemeGenerator/src/components/Header.js",[],[],"/Users/emaad/Desktop/MemeGenerator/src/components/Meme.js",["23"],[],"import React from \"react\"\n\nexport default function Meme() {\n    const [meme, setMeme] = React.useState({\n        topText: \"\",\n        bottomText: \"\",\n        randomImage: \"http://i.imgflip.com/1bij.jpg\" \n    })\n    const [allMemes, setAllMemes] = React.useState([])\n    \n\n    \n    React.useEffect( () => {\n        \n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(res => res.json())\n            .then(data => setAllMemes(data.data.memes))\n        return () => {\n            \n        }\n    }, [])\n    \n    \n    \n    \n    \n    function getMemeImage() {\n        const randomNumber = Math.floor(Math.random() * allMemes.length)\n        const url = allMemes[randomNumber].url\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            randomImage: url\n        }))\n        \n    }\n    \n    function handleChange(event) {\n        const {name, value} = event.target\n        setMeme(prevMeme => ({\n            ...prevMeme,\n            [name]: value\n        }))\n    }\n    \n    return (\n        <main>\n            <div className=\"form\">\n                <input \n                    type=\"text\"\n                    placeholder=\"Top text\"\n                    className=\"form--input\"\n                    name=\"topText\"\n                    value={meme.topText}\n                    onChange={handleChange}\n                />\n                <input \n                    type=\"text\"\n                    placeholder=\"Bottom text\"\n                    className=\"form--input\"\n                    name=\"bottomText\"\n                    value={meme.bottomText}\n                    onChange={handleChange}\n                />\n                <button \n                    className=\"form--button\"\n                    onClick={getMemeImage}\n                >\n                    Get a new meme image ðŸ–¼\n                </button>\n            </div>\n            <div className=\"meme\">\n                <img src={meme.randomImage} className=\"meme--image\" />\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\n            </div>\n        </main>\n    )\n}",{"ruleId":"24","severity":1,"message":"25","line":72,"column":17,"nodeType":"26","endLine":72,"endColumn":71},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]